<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		                    http://www.springframework.org/schema/context 
		                    http://www.springframework.org/schema/context/spring-context-2.5.xsd
		                    http://www.springframework.org/schema/tx 
		                    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		                    http://www.springframework.org/schema/aop 
		                    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<!-- 1.配置注解的自动扫描范围 -->
	<context:component-scan base-package="cn.voicet"></context:component-scan>
	<!-- 读取数据库配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc_sqlserver.properties</value>
			</list>
		</property>
	</bean>
	<!-- 配置数据源相同的内容 -->
	<bean id="dataSource_c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="properties" ref="dataSourceProperties"/>

		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="30" />
		<property name="initialPoolSize" value="10" />
		<property name="maxIdleTime" value="60" />
		<property name="acquireIncrement" value="5" />
		<property name="maxStatements" value="0" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
	</bean>
	
	<bean id="dataSourceProperties" class="cn.voicet.common.util.PropertiesEncryptFactoryBean">
        <property name="properties">
            <props>
                <prop key="user"></prop>
                <prop key="password"></prop>
            </props>
        </property>
    </bean>
	
	<bean id="dataSource_druid" class="com.alibaba.druid.pool.DruidDataSource"  
        destroy-method="close">  
        <property name="url" value="jdbc:sqlserver://ip:port;databaseName=dbName" /> 
        <property name="username" value="" />  
        <property name="password" value="" />  
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />  
        <property name="filters" value="stat" />  
  
        <property name="maxActive" value="20" />  
        <property name="initialSize" value="1" />  
        <property name="maxWait" value="60000" />  
        <property name="minIdle" value="10" />  
  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
  
        <property name="validationQuery" value="SELECT 'x'" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="maxOpenPreparedStatements"  
            value="20" />  
        <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->  
        <property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->  
        <property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->  
    </bean>
	
	<!-- 配置jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource_druid"></property>
	</bean>
	
	<!-- jdbc事务管理器 -->  
  	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    	<property name="dataSource" ref ="dataSource_druid"/>  
  	</bean>  
  	
  	<!-- 使用注解的形式管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
